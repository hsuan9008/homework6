{"version":3,"sources":["date.js","title.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","DatePickers","useState","Date","selectedDate","setSelecteDate","year","getFullYear","classes","className","noValidate","utils","DateFnsUtils","id","variant","value","onChange","format","margin","fullWidth","alignItems","KeyboardButtonProps","headerStyle","background","color","textAlign","padding","fontsize","Header","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,YAQC,SAASC,IACtB,MAAuCC,mBAAS,IAAIC,KAAK,eAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAwBF,EAAaG,cALhC,KAMLC,EAAUb,IAEhB,OACE,sBAAMc,UAAWD,EAAQV,UAAWY,YAAU,EAA9C,SACE,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,GAAG,qBACHC,QAAQ,SACRC,MAAOX,EACPY,SAAUX,EACVY,OAAQ,eAAOX,EAAO,+BACtBY,OAAO,SACPC,WAAS,EACTC,WAAW,SACXC,oBAAqB,CACnB,aAAc,qBC5B1B,IAAMC,EAAc,CAChBC,WAAY,UACZC,MAAO,UACPC,UAAW,SACXC,QAAS,OACTC,SAAS,YAIEC,EAjBf,WACI,OACI,wBAAQC,MAAOP,EAAf,SACI,qFCSGQ,MATf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15637c90.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  }\r\n}));\r\n\r\nvar handleDateChange = function (a) {\r\n  return a - 1911;\r\n};\r\n\r\nexport default function DatePickers() {\r\n  const [selectedDate, setSelecteDate] = useState(new Date(\"2021-07-25\"));\r\n  const year = handleDateChange(selectedDate.getFullYear());\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          id=\"date-picker-inline\"\r\n          variant=\"inline\"\r\n          value={selectedDate}\r\n          onChange={setSelecteDate}\r\n          format={\"民國\" + year + \"年 - MM月 - dd號\"}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          alignItems='center'\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\"\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>阿公店開店日選擇</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#5F9EA0',\r\n    color: '#FFFFE0',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n    fontsize:'xx-large',\r\n}\r\n\r\n\r\nexport default Header;","import './App.css';\nimport DATE from './date'\nimport Header from './title';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <DATE/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}